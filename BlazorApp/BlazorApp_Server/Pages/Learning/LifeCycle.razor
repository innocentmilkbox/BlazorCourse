@page "/lifecycle"
@using BlazorApp_Server.Pages.Learning.MinorComponents
<h3>LifeCycle</h3>

<div class="border">
    <LifeCycleComponent countValue ="@currentCount"></LifeCycleComponent>
</div>
<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@foreach(var item in eventType)
{
    @item
    <hr />
}

@code {
    private int currentCount = 0;
    List<string> eventType = new List<string>();

    private void IncrementCount()
    {
        currentCount++;
    }
    protected override void OnInitialized()
    {
        eventType.Add("OnInitialized event is called");
    }
    protected override async Task OnInitializedAsync()
    {
        eventType.Add("OnInitializedAsync event is called");
        await Task.Delay(5000);
    }
    protected override void OnParametersSet()
    {
        eventType.Add("OnParametersSet event is called");
    }
    protected override async Task OnParametersSetAsync()
    {
        eventType.Add("OnParametersSetAsync event is called");        
    }
    protected override void OnAfterRender(bool firstRender)
    {
        eventType.Add("OnAfterRender event is called");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        eventType.Add("OnAfterRenderAsync event is called");        
    }
    protected override bool ShouldRender()
    {
        eventType.Add("ShouldRender event is called");
        return true;
    } 
}
