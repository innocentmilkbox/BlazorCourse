// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorApp_Server.Pages.HotelRoom
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using BlazorApp_Server;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using BlazorApp_Server.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using BlazorApp_Server.Helper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using BlazorApp_Server.Service;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\_Imports.razor"
using Blazored.TextEditor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\Pages\HotelRoom\HotelRoomUpsert.razor"
using Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\Pages\HotelRoom\HotelRoomUpsert.razor"
using Business.Repository.IRepository;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\Pages\HotelRoom\HotelRoomUpsert.razor"
using BlazorApp_Server.Service.IService;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/hotel-room/create")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/hotel-room/edit/{Id:int}")]
    public partial class HotelRoomUpsert : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 116 "C:\Users\hle96\ZZZZ\Blazor\BlazorCourse\BlazorCourse\BlazorApp\BlazorApp_Server\Pages\HotelRoom\HotelRoomUpsert.razor"
       
    [Parameter]
    public int? Id { get; set; }
    private HotelRoomDTO HotelRoomModel { get; set; } = new HotelRoomDTO();
    private HotelRoomImageDTO hotelRoomImageDTO { get; set; } = new HotelRoomImageDTO();
    private string Title { get; set; } = "Create";
    private List<string> DeleteImageUrls { get; set; } = new List<string>();
    private bool IsImageUploadProcessStarted { get; set; } = false;

    [CascadingParameter]
    public Task<AuthenticationState> authenticationState { get; set; }

    public BlazoredTextEditor QuillHtml { get; set; } = new BlazoredTextEditor();

    protected async override Task OnInitializedAsync()
    {
        //return base.OnInitializedAsync();
        //authentication
        var authenState = await authenticationState;
        //if (!authenState.User.Identity.IsAuthenticated)
        if (!authenState.User.IsInRole(Common.SD.Role_Admin))
        {
            var uri = new Uri(navigationManager.Uri);
            navigationManager.NavigateTo($"/identity/account/login?returnUrl={uri.LocalPath}");

        }
        if (Id != null)
        {
            //update
            Title = "Update";
            HotelRoomModel = await hotelRoomRepository.GetHotelRoom(Id.Value);
            if (HotelRoomModel?.HotelRoomImages != null)
            {
                HotelRoomModel.ImageUrls = HotelRoomModel.HotelRoomImages.Select(u => u.RoomImageUrl).ToList();
            }
        }
        else
        {
            //create
            HotelRoomModel = new HotelRoomDTO();
        }
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        bool loading = true;
        while (loading)
        {
            try
            {
                if (!string.IsNullOrEmpty(HotelRoomModel.Details))
                {
                    await this.QuillHtml.LoadHTMLContent(HotelRoomModel.Details);
                }
                loading = false;
            }
            catch (Exception ex)
            {
                await Task.Delay(10);
                loading = true;
            }
        }

        //return base.OnAfterRenderAsync(firstRender);
    }

    private async Task HandleHotelRoomUpsert()
    {
        var roomDetailsByName = await hotelRoomRepository.IsRoomUnique(HotelRoomModel.Name, HotelRoomModel.Id);
        if (roomDetailsByName != null)
        {
            await jsRuntime.SwalFailure("Room name aldeady exists.");
            return;
        }
        try
        {
            if (HotelRoomModel.Id != 0 && Title == "Update")
            {
                HotelRoomModel.Details = await QuillHtml.GetHTML();
                var updateRoomResult = await hotelRoomRepository.UpdateHotelRoom(HotelRoomModel.Id, HotelRoomModel);
                if (HotelRoomModel.ImageUrls != null && HotelRoomModel.ImageUrls.Any())
                {
                    if (DeleteImageUrls != null && DeleteImageUrls.Any())
                    {
                        foreach (var img in DeleteImageUrls)
                        {
                            var imageName = img.Replace($"{navigationManager.BaseUri}RoomImages/", "");
                            var result = fileUploadService.DeleteFile(imageName);
                            await hotelroomImageRepository.DeleteRoomImageByImageUrl(img);
                        }
                    }

                    await AddHotelRoomImage(updateRoomResult);
                }
                await jsRuntime.SwalSuccess("Update Success.");
            }
            else
            {
                HotelRoomModel.Details = await QuillHtml.GetHTML();
                var createResult = await hotelRoomRepository.CreateHotelRoom(HotelRoomModel);
                await AddHotelRoomImage(createResult);
                await jsRuntime.SwalSuccess("Create Success.");
            }
        }
        catch (Exception ex)
        {

        }
        navigationManager.NavigateTo("hotel-room");
    }

    //public async void SetHTML()
    //{
    //    if (string.IsNullOrEmpty(HotelRoomModel.Details))
    //    {
    //        await this.QuillHtml.LoadHTMLContent(HotelRoomModel.Details);
    //    }
    //    //notify component that the state has changed
    //    StateHasChanged();
    //}

    private async Task HandleImageUpload(InputFileChangeEventArgs e)
    {
        IsImageUploadProcessStarted = true;
        try
        {
            var images = new List<string>();
            if (e.GetMultipleFiles().Count > 0)
            {
                foreach (var file in e.GetMultipleFiles())
                {
                    System.IO.FileInfo fileInfo = new System.IO.FileInfo(file.Name);
                    if (fileInfo.Extension.ToLower() == ".jpg" ||
                        fileInfo.Extension.ToLower() == ".png" ||
                        fileInfo.Extension.ToLower() == ".jpeg")
                    {
                        var uploadImagePath = await fileUploadService.UploadFile(file);
                        images.Add(uploadImagePath);
                    }
                    else
                    {
                        await jsRuntime.SwalFailure("Please select .jpg, .jpeg, .png file only");
                    }
                }
                if (images.Any())
                {
                    if (HotelRoomModel.ImageUrls != null && HotelRoomModel.ImageUrls.Any())
                    {
                        HotelRoomModel.ImageUrls.AddRange(images);
                    }
                    else
                    {
                        HotelRoomModel.ImageUrls = new List<string>();
                        HotelRoomModel.ImageUrls.AddRange(images);
                    }
                }
                else
                {
                    await jsRuntime.SwalFailure("Image uploading failed");
                    IsImageUploadProcessStarted = false;
                    return;
                }
            }
            IsImageUploadProcessStarted = false;
        }
        catch (Exception ex)
        {
            await jsRuntime.SwalFailure(ex.Message);
        }

    }

    private async Task AddHotelRoomImage(HotelRoomDTO hotelRoomDTO)
    {
        foreach (var imgUrl in HotelRoomModel.ImageUrls)
        {
            if (HotelRoomModel.HotelRoomImages == null || HotelRoomModel.HotelRoomImages.Where(x => x.RoomImageUrl == imgUrl).Count() == 0)
            {
                hotelRoomImageDTO = new HotelRoomImageDTO()
                {
                    RoomId = hotelRoomDTO.Id,
                    RoomImageUrl = imgUrl
                };
                await hotelroomImageRepository.CreateRoomImage(hotelRoomImageDTO);
            }

        }
    }

    internal async Task DeletePhoto(string imageUrl)
    {
        try
        {
            var imageIndex = HotelRoomModel.ImageUrls.FindIndex(x => x == imageUrl);
            //var imageToRemove = HotelRoomModel.ImageUrls.Find(x => x == imageUrl);
            var imageName = imageUrl.Replace($"{navigationManager.BaseUri}RoomImages/", "");
            if (HotelRoomModel.Id == 0 && Title == "Create")
            {
                var result = fileUploadService.DeleteFile(imageName);

            }
            else if (HotelRoomModel.Id != 0 && Title == "Update")
            {
                //DeleteImageNames ??= new List<string>();
                if (DeleteImageUrls == null) DeleteImageUrls = new List<string>();
                DeleteImageUrls.Add(imageUrl);

            }
            //Delete from the UI
            HotelRoomModel.ImageUrls.RemoveAt(imageIndex);

        }
        catch (Exception ex)
        {
            await jsRuntime.SwalFailure(ex.Message);
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IFileUpload fileUploadService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime jsRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navigationManager { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHotelRoomImageRepository hotelroomImageRepository { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHotelRoomRepository hotelRoomRepository { get; set; }
    }
}
#pragma warning restore 1591
